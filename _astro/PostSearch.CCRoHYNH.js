import{d as st,c as j,g as nt,v as it,a as J,F as ot,h as rt,i as ct,r as dt,j as ut,o as ht,f as L,t as at}from"./runtime-dom.esm-bundler.Bv__Uknk.js";import{_ as lt}from"./_plugin-vue_export-helper.DlAUqK2U.js";function k(i,t,e,s){function n(o){return o instanceof e?o:new e(function(r){r(o)})}return new(e||(e=Promise))(function(o,r){function c(h){try{u(s.next(h))}catch(l){r(l)}}function d(h){try{u(s.throw(h))}catch(l){r(l)}}function u(h){h.done?o(h.value):n(h.value).then(c,d)}u((s=s.apply(i,[])).next())})}const ft="ENTRIES",G="KEYS",Y="VALUES",p="";class T{constructor(t,e){const s=t._tree,n=Array.from(s.keys());this.set=t,this._type=e,this._path=n.length>0?[{node:s,keys:n}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:e}=x(this._path);if(x(e)===p)return{done:!1,value:this.result()};const s=t.get(x(e));return this._path.push({node:s,keys:Array.from(s.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=x(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>x(t)).filter(t=>t!==p).join("")}value(){return x(this._path).node.get(p)}result(){switch(this._type){case Y:return this.value();case G:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const x=i=>i[i.length-1],mt=(i,t,e)=>{const s=new Map;if(t===void 0)return s;const n=t.length+1,o=n+e,r=new Uint8Array(o*n).fill(e+1);for(let c=0;c<n;++c)r[c]=c;for(let c=1;c<o;++c)r[c*n]=c;return Z(i,t,e,s,r,1,n,""),s},Z=(i,t,e,s,n,o,r,c)=>{const d=o*r;t:for(const u of i.keys())if(u===p){const h=n[d-1];h<=e&&s.set(c,[i.get(u),h])}else{let h=o;for(let l=0;l<u.length;++l,++h){const a=u[l],m=r*h,_=m-r;let f=n[m];const g=Math.max(0,h-e-1),b=Math.min(r-1,h+e);for(let w=g;w<b;++w){const C=a!==t[w],V=n[_+w]+ +C,I=n[_+w+1]+1,S=n[m+w]+1,O=n[m+w+1]=Math.min(V,I,S);O<f&&(f=O)}if(f>e)continue t}Z(i.get(u),t,e,s,n,h,r,c+u)}};class y{constructor(t=new Map,e=""){this._size=void 0,this._tree=t,this._prefix=e}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[e,s]=M(this._tree,t.slice(this._prefix.length));if(e===void 0){const[n,o]=B(s);for(const r of n.keys())if(r!==p&&r.startsWith(o)){const c=new Map;return c.set(r.slice(o.length),n.get(r)),new y(c,t)}}return new y(e,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,gt(this._tree,t)}entries(){return new T(this,ft)}forEach(t){for(const[e,s]of this)t(e,s,this)}fuzzyGet(t,e){return mt(this._tree,t,e)}get(t){const e=W(this._tree,t);return e!==void 0?e.get(p):void 0}has(t){const e=W(this._tree,t);return e!==void 0&&e.has(p)}keys(){return new T(this,G)}set(t,e){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(p,e),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,e){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const s=E(this._tree,t);return s.set(p,e(s.get(p))),this}fetch(t,e){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const s=E(this._tree,t);let n=s.get(p);return n===void 0&&s.set(p,n=e()),n}values(){return new T(this,Y)}[Symbol.iterator](){return this.entries()}static from(t){const e=new y;for(const[s,n]of t)e.set(s,n);return e}static fromObject(t){return y.from(Object.entries(t))}}const M=(i,t,e=[])=>{if(t.length===0||i==null)return[i,e];for(const s of i.keys())if(s!==p&&t.startsWith(s))return e.push([i,s]),M(i.get(s),t.slice(s.length),e);return e.push([i,t]),M(void 0,"",e)},W=(i,t)=>{if(t.length===0||i==null)return i;for(const e of i.keys())if(e!==p&&t.startsWith(e))return W(i.get(e),t.slice(e.length))},E=(i,t)=>{const e=t.length;t:for(let s=0;i&&s<e;){for(const o of i.keys())if(o!==p&&t[s]===o[0]){const r=Math.min(e-s,o.length);let c=1;for(;c<r&&t[s+c]===o[c];)++c;const d=i.get(o);if(c===o.length)i=d;else{const u=new Map;u.set(o.slice(c),d),i.set(t.slice(s,s+c),u),i.delete(o),i=u}s+=c;continue t}const n=new Map;return i.set(t.slice(s),n),n}return i},gt=(i,t)=>{const[e,s]=M(i,t);if(e!==void 0){if(e.delete(p),e.size===0)H(s);else if(e.size===1){const[n,o]=e.entries().next().value;X(s,n,o)}}},H=i=>{if(i.length===0)return;const[t,e]=B(i);if(t.delete(e),t.size===0)H(i.slice(0,-1));else if(t.size===1){const[s,n]=t.entries().next().value;s!==p&&X(i.slice(0,-1),s,n)}},X=(i,t,e)=>{if(i.length===0)return;const[s,n]=B(i);s.set(n+t,e),s.delete(n)},B=i=>i[i.length-1],$="or",tt="and",_t="and_not";class z{constructor(t){if(t?.fields==null)throw new Error('MiniSearch: option "fields" must be provided');const e=t.autoVacuum==null||t.autoVacuum===!0?N:t.autoVacuum;this._options=Object.assign(Object.assign(Object.assign({},A),t),{autoVacuum:e,searchOptions:Object.assign(Object.assign({},Q),t.searchOptions||{}),autoSuggestOptions:Object.assign(Object.assign({},St),t.autoSuggestOptions||{})}),this._index=new y,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=R,this.addFields(this._options.fields)}add(t){const{extractField:e,tokenize:s,processTerm:n,fields:o,idField:r}=this._options,c=e(t,r);if(c==null)throw new Error(`MiniSearch: document does not have ID field "${r}"`);if(this._idToShortId.has(c))throw new Error(`MiniSearch: duplicate ID ${c}`);const d=this.addDocumentId(c);this.saveStoredFields(d,t);for(const u of o){const h=e(t,u);if(h==null)continue;const l=s(h.toString(),u),a=this._fieldIds[u],m=new Set(l).size;this.addFieldLength(d,a,this._documentCount-1,m);for(const _ of l){const f=n(_,u);if(Array.isArray(f))for(const g of f)this.addTerm(a,d,g);else f&&this.addTerm(a,d,f)}}}addAll(t){for(const e of t)this.add(e)}addAllAsync(t,e={}){const{chunkSize:s=10}=e,n={chunk:[],promise:Promise.resolve()},{chunk:o,promise:r}=t.reduce(({chunk:c,promise:d},u,h)=>(c.push(u),(h+1)%s===0?{chunk:[],promise:d.then(()=>new Promise(l=>setTimeout(l,0))).then(()=>this.addAll(c))}:{chunk:c,promise:d}),n);return r.then(()=>this.addAll(o))}remove(t){const{tokenize:e,processTerm:s,extractField:n,fields:o,idField:r}=this._options,c=n(t,r);if(c==null)throw new Error(`MiniSearch: document does not have ID field "${r}"`);const d=this._idToShortId.get(c);if(d==null)throw new Error(`MiniSearch: cannot remove document with ID ${c}: it is not in the index`);for(const u of o){const h=n(t,u);if(h==null)continue;const l=e(h.toString(),u),a=this._fieldIds[u],m=new Set(l).size;this.removeFieldLength(d,a,this._documentCount,m);for(const _ of l){const f=s(_,u);if(Array.isArray(f))for(const g of f)this.removeTerm(a,d,g);else f&&this.removeTerm(a,d,f)}}this._storedFields.delete(d),this._documentIds.delete(d),this._idToShortId.delete(c),this._fieldLength.delete(d),this._documentCount-=1}removeAll(t){if(t)for(const e of t)this.remove(e);else{if(arguments.length>0)throw new Error("Expected documents to be present. Omit the argument to remove all documents.");this._index=new y,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldLength=new Map,this._avgFieldLength=[],this._storedFields=new Map,this._nextId=0}}discard(t){const e=this._idToShortId.get(t);if(e==null)throw new Error(`MiniSearch: cannot discard document with ID ${t}: it is not in the index`);this._idToShortId.delete(t),this._documentIds.delete(e),this._storedFields.delete(e),(this._fieldLength.get(e)||[]).forEach((s,n)=>{this.removeFieldLength(e,n,this._documentCount,s)}),this._fieldLength.delete(e),this._documentCount-=1,this._dirtCount+=1,this.maybeAutoVacuum()}maybeAutoVacuum(){if(this._options.autoVacuum===!1)return;const{minDirtFactor:t,minDirtCount:e,batchSize:s,batchWait:n}=this._options.autoVacuum;this.conditionalVacuum({batchSize:s,batchWait:n},{minDirtCount:e,minDirtFactor:t})}discardAll(t){const e=this._options.autoVacuum;try{this._options.autoVacuum=!1;for(const s of t)this.discard(s)}finally{this._options.autoVacuum=e}this.maybeAutoVacuum()}replace(t){const{idField:e,extractField:s}=this._options,n=s(t,e);this.discard(n),this.add(t)}vacuum(t={}){return this.conditionalVacuum(t)}conditionalVacuum(t,e){return this._currentVacuum?(this._enqueuedVacuumConditions=this._enqueuedVacuumConditions&&e,this._enqueuedVacuum!=null?this._enqueuedVacuum:(this._enqueuedVacuum=this._currentVacuum.then(()=>{const s=this._enqueuedVacuumConditions;return this._enqueuedVacuumConditions=R,this.performVacuuming(t,s)}),this._enqueuedVacuum)):this.vacuumConditionsMet(e)===!1?Promise.resolve():(this._currentVacuum=this.performVacuuming(t),this._currentVacuum)}performVacuuming(t,e){return k(this,void 0,void 0,function*(){const s=this._dirtCount;if(this.vacuumConditionsMet(e)){const n=t.batchSize||P.batchSize,o=t.batchWait||P.batchWait;let r=1;for(const[c,d]of this._index){for(const[u,h]of d)for(const[l]of h)this._documentIds.has(l)||(h.size<=1?d.delete(u):h.delete(l));this._index.get(c).size===0&&this._index.delete(c),r%n===0&&(yield new Promise(u=>setTimeout(u,o))),r+=1}this._dirtCount-=s}yield null,this._currentVacuum=this._enqueuedVacuum,this._enqueuedVacuum=null})}vacuumConditionsMet(t){if(t==null)return!0;let{minDirtCount:e,minDirtFactor:s}=t;return e=e||N.minDirtCount,s=s||N.minDirtFactor,this.dirtCount>=e&&this.dirtFactor>=s}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}has(t){return this._idToShortId.has(t)}getStoredFields(t){const e=this._idToShortId.get(t);if(e!=null)return this._storedFields.get(e)}search(t,e={}){const{searchOptions:s}=this._options,n=Object.assign(Object.assign({},s),e),o=this.executeQuery(t,e),r=[];for(const[c,{score:d,terms:u,match:h}]of o){const l=u.length||1,a={id:this._documentIds.get(c),score:d*l,terms:Object.keys(h),queryTerms:u,match:h};Object.assign(a,this._storedFields.get(c)),(n.filter==null||n.filter(a))&&r.push(a)}return t===z.wildcard&&n.boostDocument==null||r.sort(q),r}autoSuggest(t,e={}){e=Object.assign(Object.assign({},this._options.autoSuggestOptions),e);const s=new Map;for(const{score:o,terms:r}of this.search(t,e)){const c=r.join(" "),d=s.get(c);d!=null?(d.score+=o,d.count+=1):s.set(c,{score:o,terms:r,count:1})}const n=[];for(const[o,{score:r,terms:c,count:d}]of s)n.push({suggestion:o,terms:c,score:r/d});return n.sort(q),n}get documentCount(){return this._documentCount}get termCount(){return this._index.size}static loadJSON(t,e){if(e==null)throw new Error("MiniSearch: loadJSON should be given the same options used when serializing the index");return this.loadJS(JSON.parse(t),e)}static loadJSONAsync(t,e){return k(this,void 0,void 0,function*(){if(e==null)throw new Error("MiniSearch: loadJSON should be given the same options used when serializing the index");return this.loadJSAsync(JSON.parse(t),e)})}static getDefault(t){if(A.hasOwnProperty(t))return D(A,t);throw new Error(`MiniSearch: unknown option "${t}"`)}static loadJS(t,e){const{index:s,documentIds:n,fieldLength:o,storedFields:r,serializationVersion:c}=t,d=this.instantiateMiniSearch(t,e);d._documentIds=F(n),d._fieldLength=F(o),d._storedFields=F(r);for(const[u,h]of d._documentIds)d._idToShortId.set(h,u);for(const[u,h]of s){const l=new Map;for(const a of Object.keys(h)){let m=h[a];c===1&&(m=m.ds),l.set(parseInt(a,10),F(m))}d._index.set(u,l)}return d}static loadJSAsync(t,e){return k(this,void 0,void 0,function*(){const{index:s,documentIds:n,fieldLength:o,storedFields:r,serializationVersion:c}=t,d=this.instantiateMiniSearch(t,e);d._documentIds=yield v(n),d._fieldLength=yield v(o),d._storedFields=yield v(r);for(const[h,l]of d._documentIds)d._idToShortId.set(l,h);let u=0;for(const[h,l]of s){const a=new Map;for(const m of Object.keys(l)){let _=l[m];c===1&&(_=_.ds),a.set(parseInt(m,10),yield v(_))}++u%1e3===0&&(yield et(0)),d._index.set(h,a)}return d})}static instantiateMiniSearch(t,e){const{documentCount:s,nextId:n,fieldIds:o,averageFieldLength:r,dirtCount:c,serializationVersion:d}=t;if(d!==1&&d!==2)throw new Error("MiniSearch: cannot deserialize an index created with an incompatible version");const u=new z(e);return u._documentCount=s,u._nextId=n,u._idToShortId=new Map,u._fieldIds=o,u._avgFieldLength=r,u._dirtCount=c||0,u._index=new y,u}executeQuery(t,e={}){if(t===z.wildcard)return this.executeWildcardQuery(e);if(typeof t!="string"){const a=Object.assign(Object.assign(Object.assign({},e),t),{queries:void 0}),m=t.queries.map(_=>this.executeQuery(_,a));return this.combineResults(m,a.combineWith)}const{tokenize:s,processTerm:n,searchOptions:o}=this._options,r=Object.assign(Object.assign({tokenize:s,processTerm:n},o),e),{tokenize:c,processTerm:d}=r,l=c(t).flatMap(a=>d(a)).filter(a=>!!a).map(yt(r)).map(a=>this.executeQuerySpec(a,r));return this.combineResults(l,r.combineWith)}executeQuerySpec(t,e){const s=Object.assign(Object.assign({},this._options.searchOptions),e),n=(s.fields||this._options.fields).reduce((f,g)=>Object.assign(Object.assign({},f),{[g]:D(s.boost,g)||1}),{}),{boostDocument:o,weights:r,maxFuzzy:c,bm25:d}=s,{fuzzy:u,prefix:h}=Object.assign(Object.assign({},Q.weights),r),l=this._index.get(t.term),a=this.termResults(t.term,t.term,1,t.termBoost,l,n,o,d);let m,_;if(t.prefix&&(m=this._index.atPrefix(t.term)),t.fuzzy){const f=t.fuzzy===!0?.2:t.fuzzy,g=f<1?Math.min(c,Math.round(t.term.length*f)):f;g&&(_=this._index.fuzzyGet(t.term,g))}if(m)for(const[f,g]of m){const b=f.length-t.term.length;if(!b)continue;_?.delete(f);const w=h*f.length/(f.length+.3*b);this.termResults(t.term,f,w,t.termBoost,g,n,o,d,a)}if(_)for(const f of _.keys()){const[g,b]=_.get(f);if(!b)continue;const w=u*f.length/(f.length+b);this.termResults(t.term,f,w,t.termBoost,g,n,o,d,a)}return a}executeWildcardQuery(t){const e=new Map,s=Object.assign(Object.assign({},this._options.searchOptions),t);for(const[n,o]of this._documentIds){const r=s.boostDocument?s.boostDocument(o,"",this._storedFields.get(n)):1;e.set(n,{score:r,terms:[],match:{}})}return e}combineResults(t,e=$){if(t.length===0)return new Map;const s=e.toLowerCase(),n=pt[s];if(!n)throw new Error(`Invalid combination operator: ${e}`);return t.reduce(n)||new Map}toJSON(){const t=[];for(const[e,s]of this._index){const n={};for(const[o,r]of s)n[o]=Object.fromEntries(r);t.push([e,n])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}termResults(t,e,s,n,o,r,c,d,u=new Map){if(o==null)return u;for(const h of Object.keys(r)){const l=r[h],a=this._fieldIds[h],m=o.get(a);if(m==null)continue;let _=m.size;const f=this._avgFieldLength[a];for(const g of m.keys()){if(!this._documentIds.has(g)){this.removeTerm(a,g,e),_-=1;continue}const b=c?c(this._documentIds.get(g),e,this._storedFields.get(g)):1;if(!b)continue;const w=m.get(g),C=this._fieldLength.get(g)[a],V=bt(w,_,this._documentCount,C,f,d),I=s*n*l*b*V,S=u.get(g);if(S){S.score+=I,xt(S.terms,t);const O=D(S.match,e);O?O.push(h):S.match[e]=[h]}else u.set(g,{score:I,terms:[t],match:{[e]:[h]}})}}return u}addTerm(t,e,s){const n=this._index.fetch(s,K);let o=n.get(t);if(o==null)o=new Map,o.set(e,1),n.set(t,o);else{const r=o.get(e);o.set(e,(r||0)+1)}}removeTerm(t,e,s){if(!this._index.has(s)){this.warnDocumentChanged(e,t,s);return}const n=this._index.fetch(s,K),o=n.get(t);o==null||o.get(e)==null?this.warnDocumentChanged(e,t,s):o.get(e)<=1?o.size<=1?n.delete(t):o.delete(e):o.set(e,o.get(e)-1),this._index.get(s).size===0&&this._index.delete(s)}warnDocumentChanged(t,e,s){for(const n of Object.keys(this._fieldIds))if(this._fieldIds[n]===e){this._options.logger("warn",`MiniSearch: document with ID ${this._documentIds.get(t)} has changed before removal: term "${s}" was not present in field "${n}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}}addDocumentId(t){const e=this._nextId;return this._idToShortId.set(t,e),this._documentIds.set(e,t),this._documentCount+=1,this._nextId+=1,e}addFields(t){for(let e=0;e<t.length;e++)this._fieldIds[t[e]]=e}addFieldLength(t,e,s,n){let o=this._fieldLength.get(t);o==null&&this._fieldLength.set(t,o=[]),o[e]=n;const c=(this._avgFieldLength[e]||0)*s+n;this._avgFieldLength[e]=c/(s+1)}removeFieldLength(t,e,s,n){if(s===1){this._avgFieldLength[e]=0;return}const o=this._avgFieldLength[e]*s-n;this._avgFieldLength[e]=o/(s-1)}saveStoredFields(t,e){const{storeFields:s,extractField:n}=this._options;if(s==null||s.length===0)return;let o=this._storedFields.get(t);o==null&&this._storedFields.set(t,o={});for(const r of s){const c=n(e,r);c!==void 0&&(o[r]=c)}}}z.wildcard=Symbol("*");const D=(i,t)=>Object.prototype.hasOwnProperty.call(i,t)?i[t]:void 0,pt={[$]:(i,t)=>{for(const e of t.keys()){const s=i.get(e);if(s==null)i.set(e,t.get(e));else{const{score:n,terms:o,match:r}=t.get(e);s.score=s.score+n,s.match=Object.assign(s.match,r),U(s.terms,o)}}return i},[tt]:(i,t)=>{const e=new Map;for(const s of t.keys()){const n=i.get(s);if(n==null)continue;const{score:o,terms:r,match:c}=t.get(s);U(n.terms,r),e.set(s,{score:n.score+o,terms:n.terms,match:Object.assign(n.match,c)})}return e},[_t]:(i,t)=>{for(const e of t.keys())i.delete(e);return i}},wt={k:1.2,b:.7,d:.5},bt=(i,t,e,s,n,o)=>{const{k:r,b:c,d}=o;return Math.log(1+(e-t+.5)/(t+.5))*(d+i*(r+1)/(i+r*(1-c+c*s/n)))},yt=i=>(t,e,s)=>{const n=typeof i.fuzzy=="function"?i.fuzzy(t,e,s):i.fuzzy||!1,o=typeof i.prefix=="function"?i.prefix(t,e,s):i.prefix===!0,r=typeof i.boostTerm=="function"?i.boostTerm(t,e,s):1;return{term:t,fuzzy:n,prefix:o,termBoost:r}},A={idField:"id",extractField:(i,t)=>i[t],tokenize:i=>i.split(zt),processTerm:i=>i.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(i,t)=>{typeof console?.[i]=="function"&&console[i](t)},autoVacuum:!0},Q={combineWith:$,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:wt},St={combineWith:tt,prefix:(i,t,e)=>t===e.length-1},P={batchSize:1e3,batchWait:10},R={minDirtFactor:.1,minDirtCount:20},N=Object.assign(Object.assign({},P),R),xt=(i,t)=>{i.includes(t)||i.push(t)},U=(i,t)=>{for(const e of t)i.includes(e)||i.push(e)},q=({score:i},{score:t})=>t-i,K=()=>new Map,F=i=>{const t=new Map;for(const e of Object.keys(i))t.set(parseInt(e,10),i[e]);return t},v=i=>k(void 0,void 0,void 0,function*(){const t=new Map;let e=0;for(const s of Object.keys(i))t.set(parseInt(s,10),i[s]),++e%1e3===0&&(yield et(0));return t}),et=i=>new Promise(t=>setTimeout(t,i)),zt=/[\n\r\p{Z}\p{P}]+/u,Ot=st({__name:"PostSearch",async setup(i,{expose:t}){t();let e,s;const n=new z({fields:["title","content"],storeFields:["date","tags","title","url"]});[e,s]=ct(async()=>fetch("/data/posts.json").then(async d=>{const u=await d.json();u.forEach((h,l)=>{h.id=l}),n.addAll(u)}).catch(d=>{console.log(d)})),await e,s();const o=dt(""),r=ut(()=>n.search(o.value));ht(()=>{console.log(window.location.href)});const c={miniSearch:n,keyword:o,results:r};return Object.defineProperty(c,"__isScriptSetup",{enumerable:!1,value:!0}),c}}),It={class:"my-4"},Ft=["href"];function vt(i,t,e,s,n,o){return L(),j("div",null,[nt(J("input",{"onUpdate:modelValue":t[0]||(t[0]=r=>s.keyword=r),class:"text-black w-64 px-3 py-2 rounded-xl border-2 border-blue-400 focus:outline-none",placeholder:"在此输入搜索关键词..."},null,512),[[it,s.keyword]]),(L(!0),j(ot,null,rt(s.results,r=>(L(),j("div",It,[J("a",{href:r.url},at(r.title),9,Ft)]))),256))])}const Ct=lt(Ot,[["render",vt]]);export{Ct as default};
